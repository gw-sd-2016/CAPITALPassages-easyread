# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                     controllers.Application.index()
GET         /signup                               controllers.Application.signup()
POST        /signupSub                            controllers.Application.signup_submit()
GET         /login                                controllers.Application.login()
POST        /login                                controllers.Application.login_submit()
#GET    /viewAllPassageTags		controllers.Application.viewAllPassageTags()
GET         /javascriptRoutes                     @controllers.Application.javascriptRoutes()
GET         /logout                               controllers.Application.logout()



# SimplePassageController
GET         /createSimplePassage                  controllers.SimplePassageController.createSimplePassage()
POST        /createSimplePassage                  controllers.SimplePassageController.createSimplePassage_submit()
GET         /viewAllPassages                      controllers.SimplePassageController.viewAllPassages()
POST        /editSimplePassage_submit             controllers.SimplePassageController.edit_submit(passageId : Long)
GET         /editPassageAtGrade                   controllers.SimplePassageController.editPassage(passageId : Long, grade : Int)
POST        /deletePassage                        controllers.SimplePassageController.deletePassage(passageId: Long)
GET         /setNumQ                              controllers.SimplePassageController.setNumQuestions(passageId : Long)
POST        /setNumQ                              controllers.SimplePassageController.setNumQuestions_submit()
GET     /viewPassageQuestions		controllers.SimplePassageController.viewPassageQuestions(passageId : Long)
GET         /viewAllPassagesWithTag               controllers.SimplePassageController.viewAllPassagesWithTag(name : String)
GET         /analyzePassages                      @controllers.SimplePassageController.analyzePassages()
GET         /answerPassageQuestions               controllers.SimplePassageController.answerPassageQuestions(passageId : Long)
POST        /answerPassageQuestions_submit        controllers.SimplePassageController.answerPassageQuestions_submit(passageId : Long)
GET         /viewPassageQuestionAnswers           controllers.SimplePassageController.viewPassageQuestionAnswers(passageId : Long)
GET         /editQuestions                        controllers.SimplePassageController.editQuestions(passageId : Long)
POST        /editQuestion_submit                  controllers.SimplePassageController.editQuestions_submit(passageId : Long)
GET         /editQuestionChoices                     controllers.SimplePassageController.editQuestionChoices(questionId : Long)
GET         /viewPassageWithSuggestions           controllers.SimplePassageController.viewS(passageId : Long, grade : Int)
GET         /viewPassageAsStudent           controllers.SimplePassageController.viewAsStudent(passageId : Long, grade : Int)
GET         /acceptWord                           @controllers.SimplePassageController.acceptWord(word : String, grade : Int)
GET         /replaceWord                          @controllers.SimplePassageController.replaceWord(passageId : Long, word : String, replacement : String)
#GET     /viewAllPassageTags             controllers.SimplePassageController.viewAllPassageTags(tags : util.List[PassageTag])
GET        /getSugg                               controllers.SimplePassageController.getSuggestions(word : String)
GET        /getSB                                 controllers.SimplePassageController.beginSentenceBreakdown(passageId : Long, grade : Int)
GET        /savePT                                controllers.SimplePassageController.savePassagePlainText(passageId : Long, text : String)
POST        /saveHt                                controllers.SimplePassageController.savePassageHtml(passageId : Long, grade : Int)
GET        /checkW                                   controllers.SimplePassageController.checkWord(word : String, grade : Int, passageId : Long)
GET        /checkS                                   controllers.SimplePassageController.checkSentence(sentence : String, grade : Int, passageId : Long)
POST       /createPHT                              controllers.SimplePassageController.createPassageHTML(text : String, title : String, source : String)
GET        /inProg                                controllers.SimplePassageController.isAnalyzing()
GET        /analyzeS                                controllers.SimplePassageController.analyzeSingularPassage(passageId : Long)
GET        /loggedInId                              controllers.Application.getLoggedInUserId()
GET        /moveQ                                   controllers.SimplePassageController.moveQuestion(questionId : Long, up : boolean)
GET        /moveC                                   controllers.SimplePassageController.moveChoice(choiceId : Long, questionId : Long, up : boolean)
GET        /editCA                                  controllers.SimplePassageController.editChoiceAnswer(choiceId : Long, questionId : Long, newText : String)
GET        /setCorrect                              controllers.SimplePassageController.setAsCorrectAnswer(choiceId : Long, questionId : Long)
GET        /editPrompt                              controllers.SimplePassageController.editPromptForQuestion(questionId : Long, newText : String)
GET        /addChoice                               controllers.SimplePassageController.addChoiceToQuestion(questionId : Long, newChoice : String, isCorrect : boolean)
GET         /deletePassageQuestion                controllers.SimplePassageController.deleteQuestion(questionId : Long, passageId : Long)
GET         /deletePassageQuestionChoice          controllers.SimplePassageController.deleteChoiceForQuestion(questionId : Long, passageId : Long, choiceId : Long)


# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                         controllers.Assets.at(path="/public", file)
GET         /scripts/*file                        controllers.Assets.at(path="/public/javascripts", file)
GET         /assets/javascripts/routes            controllers.Application.javascriptRoutes()
